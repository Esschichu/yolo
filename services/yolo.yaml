apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-01-21T20:30:15Z"
  labels:
    app: client
    controller-revision-hash: web-5c6768d79c
    statefulset.kubernetes.io/pod-name: web-0
  name: web
  namespace: default
  resourceVersion: "32015"
  uid: f75d19d7-f952-449b-a6af-768269c298c5
spec:
  clusterIP: 10.97.171.230
  clusterIPs:
  - 10.97.171.230
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 32000
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: client
    controller-revision-hash: web-5c6768d79c
    statefulset.kubernetes.io/pod-name: web-0
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-01-21T20:30:15Z"
  labels:
    app: backend
   
  name: web-backend
  namespace: default
  resourceVersion: "32015"
  uid: f75d19d7-f952-449b-a6af-768269c298c5
spec:
  ports:
  - nodePort: 30800
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: backend

  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  serviceName: "client"
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - name: client
        image: achieng/my-frontend-image
        ports:
        - containerPort: 3000
          name: web
        volumeMounts:
        - name: www
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1G
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web-backend
spec:
  serviceName: "backend"
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: achieng/my-backend-image
        ports:
        - containerPort: 5000
          name: web-backend
        volumeMounts:
        - name: www
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
